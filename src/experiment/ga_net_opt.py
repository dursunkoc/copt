from time import time
import sys
from typing import Callable, List, Tuple
import numpy as np
from numba import njit, prange, jit
from numba.typed import Dict
from numba.core import types
from tqdm import trange
from base_network_opt import solve_network_model_definite

import logging
import net_opt_case as noc

from genetic_operations import genetic_iteration, tournament_selection, roulettewheel_selection

logger = logging.getLogger("GA-NET-OP-LOGGER")
logger.setLevel(logging.INFO)

log_handler = logging.StreamHandler(sys.stdout)
log_handler.setFormatter(logging.Formatter(
    '%(asctime)s | %(levelname)s | %(message)s', '%m-%d-%Y %H:%M:%S'))
logger.addHandler(log_handler)

POPULATION_SIZE = "P_S"
INDIV_SIZE = "I_S"
GENERATION_SIZE = "G_S"
CHECK_BACK = "CB_C"
NUMBER_OF_CROSS_OVER_SECTION = "N_COS"
MUTATION_PROP = "MUT_PB"
MUTATION_AMOUNT = "MUT_AM"


def random_initial_population(indiv_size: Tuple[int], population_size: int) -> np.ndarray:
    return np.random.choice(2, ((population_size,) + indiv_size))


def hard_initial_population(indiv_size: int, population_size: int, e_u:np.ndarray) -> np.ndarray:
     h1 = np.ones((population_size//2,) + indiv_size, dtype='int')
     h0 = np.zeros(((population_size//2)-1,) + indiv_size, dtype='int')
#     sol=np.array([[0,1,0,0,1,0,1,0,0,0]])
     return np.concatenate((h1,h0,e_u.reshape((1,*e_u.shape))))


def fn_fitness(a_uv: np.ndarray, e_u: np.ndarray) -> Callable:
    def fn_fitness0(population: np.ndarray) -> List[Tuple[int, np.ndarray]]:
        return [(fn_fitness_indiv(indiv, a_uv, e_u), indiv) for indiv in population]
#    return njit(fn_fitness0)
    return fn_fitness0

#@njit(cache=True)
def max_fit(shape):
    acc = 1
    for s in shape:
        acc = acc*s
    return acc

#@njit
def fix_to_fit(indiv, a_uv, e_u):
    if np.random.randint(10) == 4:
        diff = np.asarray(( indiv * a_uv ) - e_u)[0]
        fails = diff<0
        eligibles = e_u!=0
        canfix = indiv==0
        indiv[fails & eligibles & canfix] = 1

#@njit
def increase_fitness(indiv, a_uv, e_u):
    if np.random.randint(10) == 4:
        for i in range(len(indiv)):
            if indiv[i]==1:
                indiv[i]=0
                if not check_constraint(indiv, a_uv, e_u):
                    indiv[i]=1

#@njit(cache=True)
def fn_fitness_indiv(indiv: np.ndarray, a_uv: np.ndarray, e_u: np.ndarray) -> int:
    mf = max_fit(indiv.shape)
    if not check_constraint(indiv, a_uv, e_u):
        fix_to_fit(indiv, a_uv, e_u)
        if not check_constraint(indiv, a_uv, e_u):
            return 0
    increase_fitness(indiv, a_uv, e_u)
    return mf-np.sum(indiv)


#@njit(cache=True)
def check_constraint(indiv: np.ndarray, a_uv: np.ndarray, e_u: np.ndarray) -> bool:
#    result = solve_network_model_definite(a_uv, len(indiv), e_u, indiv)
#    return result is not None
    return (indiv + (indiv*a_uv)>=e_u).all()


def main(fn_fitness0: Callable, next_generation:np.ndarray, indiv_size: Tuple[int],
         flat_indiv_size: int, generation_size: int, population_size: int, check_back: int,
         number_of_crossover_section: int, mutation_prob: float, mutation_amount: int):
    start = time()
    fitness_history = []
    for generation_index in trange(generation_size):
        next_generation = genetic_iteration(
            fn_fitness=fn_fitness0,
            indiv_size=indiv_size,
            indiv_flat_size=flat_indiv_size,
            population=next_generation,
            selection_method=tournament_selection,
            number_of_crossover_section=number_of_crossover_section,
            mutation_prob=mutation_prob,
            mutation_amount=mutation_amount,
            fitness_history=fitness_history)
        if generation_index > check_back and fitness_history[generation_index] <= fitness_history[generation_index-check_back]:
            break

    fitness_results = fn_fitness0(next_generation)
    population_with_fitness: List[Tuple[int, np.ndarray]] = sorted(
        fitness_results, key=lambda tup: tup[0], reverse=True)
    fitness_value = population_with_fitness[0][0]
    value = int(flat_indiv_size - fitness_value)
    
    end = time()

    print(f"------------------------------Staring GA Solution------------------------------")
    print(f"|Parametes: ")
    print(f"|indiv_size                  : {indiv_size}")
    print(f"|flat_indiv_size             : {flat_indiv_size}")
    print(f"|generation_size             : {generation_size}")
    print(f"|population_size             : {population_size}")
    print(f"|check_back                  : {check_back}")
    print(f"|number_of_crossover_section : {number_of_crossover_section}")
    print(f"|mutation_prob               : {mutation_prob}")
    print(f"|mutation_amount             : {mutation_amount}")
    print(f"|iterations completed        : {generation_index}")
    print(f"|duration                    : {end-start} seconds")
    print(f"|Case: customer_size={flat_indiv_size}, Objective is: {value}")
    print(f"---------------------------------------------------------------------------------")
    
#    print(value)
#    print(population_with_fitness[0][1])
#    print(fitness_history)

def get_population_size(indiv_size):
    q=indiv_size
    if q%2 != 0:
        q=q+1
    return max(30,q)

if __name__ == '__main__':
    import sys
    np.set_printoptions(threshold=sys.maxsize)
    for case in noc.cases:
        fn_fitness0 = fn_fitness(case.a_uv, case.e_u)
        population_size = get_population_size(case.indiv_size)
#        next_generation = random_initial_population(indiv_size, population_size)   
        next_generation = hard_initial_population((case.indiv_size,), population_size, case.e_u)

        main(fn_fitness0=fn_fitness0, flat_indiv_size=case.indiv_size, next_generation=next_generation,
             indiv_size=(case.indiv_size,), generation_size=2000, population_size=min(100, population_size), check_back=80,
             number_of_crossover_section=max(5, case.indiv_size//5), mutation_prob=1, mutation_amount=min(10, max(5,case.indiv_size/10)))
        
#5000->[0.0, 10.0, 20.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 40.0, 40.0, 40.0, 50.0, 50.0, 50.0, 58.0, 58.0, 58.0, 60.0, 60.0, 60.0, 60.0, 60.0, 60.0, 70.0, 70.0, 76.0, 76.0, 86.0, 86.0, 96.0, 96.0, 106.0, 106.0, 106.0, 106.0, 106.0, 106.0, 106.0, 106.0, 114.0, 114.0, 114.0, 124.0, 134.0, 144.0, 144.0, 144.0, 154.0, 154.0, 162.0, 172.0, 172.0, 180.0, 180.0, 182.0, 182.0, 182.0, 182.0, 182.0, 190.0, 190.0, 199.0, 200.0, 210.0, 218.0, 218.0, 226.0, 226.0, 236.0, 236.0, 244.0, 244.0, 244.0, 244.0, 244.0, 244.0, 244.0, 246.0, 246.0, 246.0, 254.0, 260.0, 260.0, 264.0, 274.0, 284.0, 294.0, 294.0, 294.0, 294.0, 294.0, 294.0, 294.0, 294.0, 294.0, 302.0, 312.0, 312.0, 312.0, 312.0, 312.0, 312.0, 312.0, 318.0, 320.0, 320.0, 320.0, 320.0, 330.0, 330.0, 336.0, 336.0, 336.0, 336.0, 336.0, 336.0, 342.0, 342.0, 342.0, 350.0, 360.0, 368.0, 368.0, 370.0, 376.0, 376.0, 386.0, 386.0, 386.0, 386.0, 386.0, 386.0, 386.0, 392.0, 392.0, 392.0, 392.0, 392.0, 392.0, 392.0, 396.0, 396.0, 402.0, 402.0, 402.0, 404.0, 404.0, 412.0, 412.0, 412.0, 412.0, 412.0, 412.0, 412.0, 412.0, 420.0, 424.0, 424.0, 428.0, 428.0, 436.0, 436.0, 436.0, 436.0, 436.0, 436.0, 436.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 438.0, 444.0, 454.0, 454.0, 460.0, 460.0, 460.0, 468.0, 468.0, 468.0, 468.0, 468.0, 468.0, 468.0, 468.0, 468.0, 472.0, 472.0, 472.0, 472.0, 472.0, 472.0, 472.0, 472.0, 480.0, 480.0, 480.0, 482.0, 482.0, 490.0, 490.0, 494.0, 498.0, 498.0, 498.0, 498.0, 498.0, 498.0, 506.0, 510.0, 510.0, 520.0, 520.0, 520.0, 528.0, 528.0, 530.0, 536.0, 536.0, 536.0, 543.0, 543.0, 543.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 551.0, 557.0, 557.0, 565.0, 565.0, 569.0, 569.0, 569.0, 577.0, 585.0, 585.0, 585.0, 585.0, 585.0, 585.0, 585.0, 585.0, 585.0, 585.0, 585.0, 585.0, 585.0, 595.0, 595.0, 595.0, 595.0, 595.0, 605.0, 605.0, 613.0, 613.0, 613.0, 613.0, 613.0, 623.0, 623.0, 631.0, 631.0, 631.0, 631.0, 631.0, 639.0, 639.0, 639.0, 639.0, 639.0, 639.0, 639.0, 639.0, 639.0, 639.0, 647.0, 647.0, 647.0, 647.0, 647.0, 647.0, 655.0, 655.0, 655.0, 655.0, 655.0, 655.0, 665.0, 665.0, 665.0, 665.0, 665.0, 665.0, 665.0, 665.0, 671.0, 671.0, 681.0, 681.0, 681.0, 681.0, 681.0, 681.0, 681.0, 687.0, 687.0, 695.0, 695.0, 705.0, 705.0, 705.0, 705.0, 709.0, 709.0, 709.0, 709.0, 719.0, 719.0, 719.0, 719.0, 727.0, 727.0, 727.0, 731.0, 733.0, 733.0, 737.0, 741.0, 741.0, 741.0, 741.0, 741.0, 741.0, 747.0, 747.0, 747.0, 747.0, 747.0, 747.0, 747.0, 747.0, 755.0, 755.0, 755.0, 755.0, 755.0, 761.0, 765.0, 765.0, 765.0, 765.0, 765.0, 773.0, 773.0, 773.0, 773.0, 773.0, 777.0, 781.0, 781.0, 781.0, 781.0, 781.0, 781.0, 781.0, 781.0, 781.0, 781.0, 781.0, 781.0, 781.0, 785.0, 791.0, 791.0, 791.0, 791.0, 791.0, 791.0, 791.0, 791.0, 791.0, 791.0, 791.0, 791.0, 795.0, 795.0, 795.0, 795.0, 795.0, 795.0, 801.0, 801.0, 801.0, 801.0, 801.0, 801.0, 801.0, 801.0, 801.0, 801.0, 801.0, 811.0, 811.0, 811.0, 811.0, 811.0, 817.0, 817.0, 823.0, 827.0, 827.0, 827.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 833.0, 843.0, 843.0, 843.0, 843.0, 843.0, 843.0, 843.0, 843.0, 843.0, 847.0, 847.0, 847.0, 847.0, 847.0, 847.0, 847.0, 847.0, 847.0, 857.0, 857.0, 857.0, 857.0, 857.0, 857.0, 857.0, 857.0, 861.0, 861.0, 861.0, 863.0, 863.0, 863.0, 863.0, 863.0, 863.0, 863.0, 867.0, 867.0, 867.0, 867.0, 873.0, 873.0, 873.0, 873.0, 877.0, 877.0, 877.0, 881.0, 881.0, 881.0, 889.0, 889.0, 897.0, 897.0, 897.0, 897.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 903.0, 907.0, 907.0, 911.0, 913.0, 913.0, 913.0, 913.0, 913.0, 913.0, 913.0, 913.0, 913.0, 921.0, 921.0, 925.0, 925.0, 925.0, 925.0, 925.0, 925.0, 925.0, 925.0, 925.0, 925.0, 925.0, 927.0, 927.0, 927.0, 927.0, 927.0, 929.0, 935.0, 935.0, 935.0, 935.0, 935.0, 935.0, 935.0, 935.0, 935.0, 935.0, 935.0, 935.0, 939.0, 939.0, 939.0, 947.0, 947.0, 947.0, 947.0, 947.0, 947.0, 947.0, 947.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 953.0, 959.0, 959.0, 959.0, 959.0, 961.0, 961.0, 961.0, 961.0, 961.0, 961.0, 961.0, 961.0, 969.0, 969.0, 969.0, 969.0, 969.0, 969.0, 969.0, 969.0, 975.0, 975.0, 983.0, 983.0, 983.0, 983.0, 983.0, 983.0, 983.0, 983.0, 983.0, 983.0, 983.0, 985.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 987.0, 991.0, 991.0, 991.0, 991.0, 995.0, 1001.0, 1003.0, 1003.0, 1003.0, 1003.0, 1003.0, 1003.0, 1003.0, 1003.0, 1003.0, 1007.0, 1007.0, 1007.0, 1007.0, 1007.0, 1007.0, 1007.0, 1007.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1017.0, 1025.0, 1025.0, 1025.0, 1033.0, 1033.0, 1033.0, 1039.0, 1039.0, 1039.0, 1039.0, 1039.0, 1039.0, 1039.0, 1039.0, 1039.0, 1039.0, 1039.0, 1041.0, 1041.0, 1041.0, 1047.0, 1047.0, 1047.0, 1047.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1053.0, 1057.0, 1057.0, 1057.0, 1057.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1063.0, 1069.0, 1069.0, 1069.0, 1069.0, 1069.0, 1069.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1073.0, 1081.0, 1081.0, 1081.0, 1081.0, 1081.0, 1083.0, 1083.0, 1083.0, 1083.0, 1083.0, 1083.0, 1083.0, 1083.0, 1083.0, 1083.0, 1087.0, 1087.0, 1087.0, 1087.0, 1091.0, 1091.0, 1091.0, 1091.0, 1091.0, 1091.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1097.0, 1103.0, 1103.0, 1107.0, 1107.0, 1107.0, 1107.0, 1107.0, 1107.0, 1111.0, 1111.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1117.0, 1121.0, 1121.0, 1121.0, 1123.0, 1123.0, 1123.0, 1123.0, 1123.0, 1123.0, 1123.0, 1123.0, 1129.0, 1129.0, 1129.0, 1129.0, 1137.0, 1137.0, 1137.0, 1137.0, 1137.0, 1137.0, 1137.0, 1137.0, 1137.0, 1137.0, 1137.0, 1139.0, 1139.0, 1139.0, 1139.0, 1139.0, 1143.0, 1143.0, 1143.0, 1143.0, 1143.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1149.0, 1153.0, 1153.0, 1153.0, 1153.0, 1153.0, 1153.0, 1153.0, 1153.0, 1153.0, 1153.0, 1153.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1155.0, 1163.0, 1163.0, 1163.0, 1163.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1167.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1169.0, 1171.0, 1171.0, 1171.0, 1171.0, 1171.0, 1171.0, 1173.0, 1173.0, 1175.0, 1175.0, 1175.0, 1175.0, 1175.0, 1175.0, 1175.0, 1175.0, 1175.0, 1175.0, 1175.0, 1177.0, 1177.0, 1177.0, 1177.0, 1177.0, 1177.0, 1177.0, 1181.0, 1181.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1187.0, 1191.0, 1195.0, 1195.0, 1195.0, 1195.0, 1195.0, 1197.0, 1197.0, 1197.0, 1197.0, 1197.0, 1199.0, 1199.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1207.0, 1211.0, 1211.0, 1217.0, 1217.0, 1217.0, 1217.0, 1217.0, 1217.0, 1217.0, 1217.0, 1217.0, 1217.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1225.0, 1227.0, 1227.0, 1227.0, 1227.0, 1227.0, 1227.0, 1229.0, 1229.0, 1229.0, 1235.0, 1235.0, 1235.0, 1235.0, 1235.0, 1235.0, 1235.0, 1235.0, 1235.0, 1235.0, 1235.0, 1235.0, 1237.0, 1237.0, 1237.0, 1237.0, 1237.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1239.0, 1245.0, 1245.0, 1245.0, 1245.0, 1245.0, 1245.0, 1245.0, 1245.0, 1245.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1249.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1253.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1259.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1263.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1265.0, 1267.0, 1267.0, 1267.0, 1267.0, 1267.0, 1267.0, 1267.0, 1267.0, 1273.0, 1273.0, 1273.0, 1273.0, 1273.0, 1273.0, 1273.0, 1273.0, 1273.0, 1273.0, 1273.0, 1277.0, 1277.0, 1277.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1281.0, 1285.0, 1285.0, 1285.0, 1285.0, 1289.0, 1289.0, 1289.0, 1289.0, 1289.0, 1289.0, 1289.0, 1289.0, 1289.0, 1289.0, 1289.0, 1289.0, 1293.0, 1293.0, 1293.0, 1293.0, 1293.0, 1293.0, 1295.0, 1295.0, 1295.0, 1295.0, 1295.0, 1295.0, 1295.0, 1295.0, 1295.0, 1303.0, 1303.0, 1303.0, 1303.0, 1303.0, 1303.0, 1303.0, 1303.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1307.0, 1309.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1317.0, 1321.0, 1321.0, 1321.0, 1321.0, 1321.0, 1321.0, 1321.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1323.0, 1325.0, 1325.0, 1325.0, 1325.0, 1325.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1331.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1332.0, 1336.0, 1336.0, 1336.0, 1336.0, 1336.0, 1336.0, 1336.0, 1336.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1340.0, 1346.0, 1346.0, 1346.0, 1346.0, 1346.0, 1346.0, 1346.0, 1346.0, 1346.0, 1354.0, 1354.0, 1354.0, 1362.0, 1366.0, 1366.0, 1366.0, 1366.0, 1366.0, 1372.0, 1372.0, 1372.0, 1372.0, 1372.0, 1372.0, 1372.0, 1372.0, 1372.0, 1372.0, 1372.0, 1372.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1376.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1384.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1388.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1390.0, 1394.0, 1396.0, 1396.0, 1396.0, 1396.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1398.0, 1404.0, 1404.0, 1404.0, 1404.0, 1404.0, 1404.0, 1404.0, 1404.0, 1408.0, 1408.0, 1408.0, 1408.0, 1408.0, 1408.0, 1408.0, 1408.0, 1408.0, 1408.0, 1408.0, 1408.0, 1410.0, 1410.0, 1410.0, 1410.0, 1410.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1412.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1416.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1420.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1424.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1428.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1430.0, 1436.0, 1436.0, 1436.0, 1436.0, 1436.0, 1440.0, 1440.0, 1440.0, 1440.0, 1442.0, 1442.0, 1442.0, 1442.0, 1442.0, 1446.0, 1446.0, 1446.0, 1446.0, 1446.0, 1446.0, 1446.0, 1446.0, 1446.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1450.0, 1454.0, 1454.0, 1454.0, 1454.0, 1454.0, 1456.0, 1456.0, 1456.0, 1456.0, 1456.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1462.0, 1464.0, 1464.0, 1464.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1468.0, 1470.0, 1470.0, 1470.0, 1470.0, 1470.0, 1470.0, 1480.0, 1480.0, 1480.0, 1480.0, 1480.0, 1480.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1486.0, 1490.0, 1490.0, 1490.0, 1490.0, 1490.0, 1492.0, 1492.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1494.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1496.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0, 1503.0]

#❯ workon copt
#❯ python src/experiment/mip_net_opt.py
#Case: customer_size=10, Objective is: 3.0
#Case: customer_size=20, Objective is: 7.0
#Case: customer_size=50, Objective is: 16.0
#Case: customer_size=100, Objective is: 37.0
#Case: customer_size=200, Objective is: 67.0
#Case: customer_size=500, Objective is: 160.0
#Case: customer_size=1000, Objective is: 352.0
#Case: customer_size=5000, Objective is: 1694.0
#Case: customer_size=10000, Objective is: 3402.0
#❯
#❯ python src/experiment/ga_net_opt.py
#  6%|███████▌                                                                                                                                  | 110/2000 [00:00<00:07, 242.48it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (10,)
#|flat_indiv_size             : 10
#|generation_size             : 2000
#|population_size             : 30
#|check_back                  : 80
#|number_of_crossover_section : 5
#|mutation_prob               : 1
#|mutation_amount             : 5
#|iterations completed        : 110
#|duration                    : 0.460129976272583 seconds
#|Case: customer_size=10, Objective is: 3
#---------------------------------------------------------------------------------
#  4%|█████▉                                                                                                                                     | 86/2000 [00:00<00:07, 241.79it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (20,)
#|flat_indiv_size             : 20
#|generation_size             : 2000
#|population_size             : 30
#|check_back                  : 80
#|number_of_crossover_section : 5
#|mutation_prob               : 1
#|mutation_amount             : 5
#|iterations completed        : 86
#|duration                    : 0.35794878005981445 seconds
#|Case: customer_size=20, Objective is: 8
#---------------------------------------------------------------------------------
#  7%|█████████▌                                                                                                                                | 139/2000 [00:01<00:15, 120.24it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (50,)
#|flat_indiv_size             : 50
#|generation_size             : 2000
#|population_size             : 50
#|check_back                  : 80
#|number_of_crossover_section : 10
#|mutation_prob               : 1
#|mutation_amount             : 5
#|iterations completed        : 139
#|duration                    : 1.1599302291870117 seconds
#|Case: customer_size=50, Objective is: 20
#---------------------------------------------------------------------------------
#  6%|████████                                                                                                                                   | 116/2000 [00:02<00:42, 44.06it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (100,)
#|flat_indiv_size             : 100
#|generation_size             : 2000
#|population_size             : 100
#|check_back                  : 80
#|number_of_crossover_section : 20
#|mutation_prob               : 1
#|mutation_amount             : 10
#|iterations completed        : 116
#|duration                    : 2.6407480239868164 seconds
#|Case: customer_size=100, Objective is: 51
#---------------------------------------------------------------------------------
#  4%|█████▋                                                                                                                                      | 81/2000 [00:05<02:20, 13.64it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (200,)
#|flat_indiv_size             : 200
#|generation_size             : 2000
#|population_size             : 200
#|check_back                  : 80
#|number_of_crossover_section : 40
#|mutation_prob               : 1
#|mutation_amount             : 10
#|iterations completed        : 81
#|duration                    : 5.954800844192505 seconds
#|Case: customer_size=200, Objective is: 94
#---------------------------------------------------------------------------------
#  7%|█████████▏                                                                                                                                 | 133/2000 [01:08<16:01,  1.94it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (500,)
#|flat_indiv_size             : 500
#|generation_size             : 2000
#|population_size             : 500
#|check_back                  : 80
#|number_of_crossover_section : 100
#|mutation_prob               : 1
#|mutation_amount             : 10
#|iterations completed        : 133
#|duration                    : 68.69252824783325 seconds
#|Case: customer_size=500, Objective is: 246
#---------------------------------------------------------------------------------
#  4%|█████▌                                                                                                                                    | 81/2000 [12:33<4:57:34,  9.30s/it]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (1000,)
#|flat_indiv_size             : 1000
#|generation_size             : 2000
#|population_size             : 1000
#|check_back                  : 80
#|number_of_crossover_section : 200
#|mutation_prob               : 1
#|mutation_amount             : 10
#|iterations completed        : 81
#|duration                    : 761.3674039840698 seconds
#|Case: customer_size=1000, Objective is: 508
#---------------------------------------------------------------------------------
#############################################################################################
#  4%|█████████▎                                                                                                                                                                                                                            | 81/2000 [00:00<00:10, 175.01it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (10,)
#|flat_indiv_size             : 10
#|generation_size             : 2000
#|population_size             : 30
#|check_back                  : 80
#|number_of_crossover_section : 5
#|mutation_prob               : 1
#|mutation_amount             : 5
#|iterations completed        : 81
#|duration                    : 0.47353601455688477 seconds
#|Case: customer_size=10, Objective is: 3
#---------------------------------------------------------------------------------
#  4%|█████████▍                                                                                                                                                                                                                            | 82/2000 [00:00<00:12, 154.01it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (20,)
#|flat_indiv_size             : 20
#|generation_size             : 2000
#|population_size             : 30
#|check_back                  : 80
#|number_of_crossover_section : 5
#|mutation_prob               : 1
#|mutation_amount             : 5
#|iterations completed        : 82
#|duration                    : 0.5359270572662354 seconds
#|Case: customer_size=20, Objective is: 7
#---------------------------------------------------------------------------------
#  4%|█████████▋                                                                                                                                                                                                                             | 84/2000 [00:01<00:24, 78.16it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (50,)
#|flat_indiv_size             : 50
#|generation_size             : 2000
#|population_size             : 50
#|check_back                  : 80
#|number_of_crossover_section : 10
#|mutation_prob               : 1
#|mutation_amount             : 5
#|iterations completed        : 84
#|duration                    : 1.0805702209472656 seconds
#|Case: customer_size=50, Objective is: 16
#---------------------------------------------------------------------------------
#  5%|████████████▍                                                                                                                                                                                                                         | 108/2000 [00:03<01:01, 30.67it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (100,)
#|flat_indiv_size             : 100
#|generation_size             : 2000
#|population_size             : 100
#|check_back                  : 80
#|number_of_crossover_section : 20
#|mutation_prob               : 1
#|mutation_amount             : 10
#|iterations completed        : 108
#|duration                    : 3.541267156600952 seconds
#|Case: customer_size=100, Objective is: 38
#---------------------------------------------------------------------------------
#  4%|██████████▎                                                                                                                                                                                                                            | 89/2000 [00:11<04:09,  7.66it/s]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (200,)
#|flat_indiv_size             : 200
#|generation_size             : 2000
#|population_size             : 200
#|check_back                  : 80
#|number_of_crossover_section : 40
#|mutation_prob               : 1
#|mutation_amount             : 10
#|iterations completed        : 89
#|duration                    : 11.678210973739624 seconds
#|Case: customer_size=200, Objective is: 69
#---------------------------------------------------------------------------------
#
#  6%|█████████████                                                                                                                                                                                                                         | 114/2000 [02:56<48:47,  1.55s/it]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (500,)
#|flat_indiv_size             : 500
#|generation_size             : 2000
#|population_size             : 500
#|check_back                  : 80
#|number_of_crossover_section : 100
#|mutation_prob               : 1
#|mutation_amount             : 10
#|iterations completed        : 114
#|duration                    : 178.1279377937317 seconds
#|Case: customer_size=500, Objective is: 166
#---------------------------------------------------------------------------------
#  4%|█████████▉                                                                                                                                                                                                                           | 87/2000 [26:43<9:47:44, 18.43s/it]
#------------------------------Staring GA Solution------------------------------
#|Parametes:
#|indiv_size                  : (1000,)
#|flat_indiv_size             : 1000
#|generation_size             : 2000
#|population_size             : 1000
#|check_back                  : 80
#|number_of_crossover_section : 200
#|mutation_prob               : 1
#|mutation_amount             : 10
#|iterations completed        : 87
#|duration                    : 1620.2458288669586 seconds
#|Case: customer_size=1000, Objective is: 486
#---------------------------------------------------------------------------------